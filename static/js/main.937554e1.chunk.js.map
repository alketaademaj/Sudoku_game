{"version":3,"sources":["components/NumberBox.js","components/NineBox.js","components/CompleteBox.jsx","components/ChangeNumber.jsx","components/SelectNumber.jsx","App.js","reportWebVitals.js","index.js"],"names":["NumberBox","props","state","address","row","column","selected","color","prevProps","this","toString","setState","className","style","backgroundColor","onClick","passingValue","numbValue","Component","NineBox","map","ind","val","CompleteBox","x","push","changeSelected","ChangeNumber","tempCopy","value","setnumbValue","SelectNumber","Array","i","App","useState","numbvalue","setSelected","keyChange","event","key","parseInt","console","log","temp","useEffect","document","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.937554e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport class NumberBox extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      address: [this.props.row, this.props.column],\r\n      selected: this.props.selected,\r\n      color: ''\r\n    };\r\n  }\r\n //--> whenever the state or props update, the component rerenders \r\n\r\n  componentDidUpdate(prevProps) { //this.state without a condition -> goes to infinite loop\r\n    if (prevProps.selected !== this.props.selected) { //what the value of selected was before this one\r\n      // console.log(this.props.selected.toString(),this.state.address.toString())\r\n      if (this.props.selected.toString() === this.state.address.toString()) {\r\n        this.setState({ color: 'rgb(43, 134, 161)' })\r\n        //  console.log(\"blue color set for \", this.state.address)\r\n      }\r\n      else {\r\n        this.setState({ color: 'rgb(147, 194, 216)' })\r\n        //  console.log(\"pink color set for \", this.state.address)\r\n      }\r\n      this.setState({ selected: this.props.selected });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.selected)\r\n    // console.log(this.state.address, this.props.selected, this.props.selected.toString(), this.state.address.toString())\r\n    //console.log(this.props.selected.toString(), this.state.address.toString())\r\n\r\n    //{this.props.numbValue}\r\n\r\n    return (\r\n      <div className=\"allBox\">\r\n        <div\r\n          className=\"aBox\" style={{ backgroundColor: this.state.color }} onClick={() => this.props.passingValue(this.props.row, this.props.column)} >\r\n            {this.props.numbValue[this.props.row*9 + this.props.column]}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NumberBox\r\n","import React, { Component } from 'react'\r\nimport NumberBox from './NumberBox' //same file reference can you hear me?\r\n\r\nexport class NineBox extends Component {\r\n\r\n    //checking if the sudoku is filled correctly comes here\r\n\r\n    render() {\r\n\r\n        const column = [0,1,2,3,4,5,6,7,8]\r\n\r\n        return (\r\n            <div className=\"nineBox\">\r\n\r\n                {column.map((ind, val) => {\r\n                    return <NumberBox key = {ind} column = {ind} passingValue = {this.props.passingValue} row = {this.props.row} selected = {this.props.selected}  numbValue = {this.props.numbValue} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NineBox\r\n","import React, { Component } from \"react\";\r\nimport NineBox from \"./NineBox\";\r\n\r\nexport class CompleteBox extends Component {\r\n  render() {\r\n    const row = [];\r\n\r\n    for (let x = 0; x <= 8; x++) {\r\n      row.push(\r\n        <NineBox\r\n          key={x}\r\n          row={x}\r\n          passingValue={this.props.changeSelected}\r\n          selected={this.props.selected}\r\n          numbValue={this.props.numbValue}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"complete\">{row}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompleteBox;\r\n","import React from 'react'\r\n\r\nfunction ChangeNumber(props) {\r\n\r\n    const sudokuChange = () => {\r\n        if(props.numbValue[props.selected[0]*9 + props.selected[1]] == null) {\r\n         const tempCopy = [...props.numbValue]\r\n        tempCopy[props.selected[0]*9 + props.selected[1]] = props.value;\r\n        props.setnumbValue(tempCopy);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"smallBox\" onClick = {sudokuChange}>{props.value}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeNumber \r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ChangeNumber from './ChangeNumber'\r\n\r\n//no state, using hooks \r\n\r\nexport class SelectNumber extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n          <div className=\"selectNro\">\r\n            {[...Array(9)].map((x, i) => (\r\n              <ChangeNumber key={i} value={i+1}  numbValue = {this.props.numbValue} setnumbValue = {this.props.setnumbValue} selected = {this.props.selected} /> //like calling a function in javascript example(one,two)\r\n            ))}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectNumber\r\n","import './App.css';\nimport CompleteBox from './components/CompleteBox'; //the default export that you use\nimport SelectNumber from './components/SelectNumber';\nimport { useState, useEffect } from 'react'; // for normal imports, for example always import the hooks from react - difference between class and function components\n//import NineBox from './components/NineBox'\n\nfunction App() {\n\n  const [numbvalue, setnumbValue] = useState([\"1\", \"5\", null, null, \"8\", null, \"7\", null, \"4\", \"7\", \"8\", \"6\", null, \"5\", \"4\", null, null, null, null, null, \"9\", \"6\", null, null, \"1\", null, null, null, null, \"2\", null, \"1\", null, \"5\", \"7\", \"8\", \"5\", null, null, null, null, null, \"3\", null, null, null, null, null, null, null, \"3\", null, \"1\", \"2\", null, \"3\", null, null, null, \"1\", \"6\", null, null, null, \"6\", null, \"4\", null, \"5\", \"8\", \"3\", \"7\", \"9\", null, null, \"3\", null, null, null, \"5\", null]) //setnumbValue, the method, allows you to change the state\n  const [selected, setSelected] = useState(Array(2))\n\n  //console.log(selected)\n  //setnumbValue(numbValue)\n\n  const onclick = (row, column) => {\n    setSelected([row, column])\n    //console.log(this.state.selected)\n  };\n\n  const keyChange = (event) => {\n    //console.log(selected)\n    //console.log(event.key)\n    if (event.key === \"ArrowLeft\") {\n      setSelected([selected[0], selected[1] - 1]) //1. row, 2. column \n    }\n    else if (event.key === \"ArrowRight\") {\n      setSelected([selected[0], selected[1] + 1]) //we are first getting the first value with select[0] and with select [1] the value of column\n    }\n    else if (event.key === \"ArrowUp\") {\n      setSelected([selected[0] - 1, selected[1]])\n    }\n    else if (event.key === \"ArrowDown\") {\n      setSelected([selected[0] + 1, selected[1]])\n    }\n    else if (parseInt(event.key) > 0 && parseInt(event.key) < 10) {\n      console.log(event.key)\n      //now do your thing\n      if (numbvalue[selected[0] * 9 + selected[1]] === null) { //array only understands the index of the elemnt \n        const temp = [...numbvalue]; //spreading numbValue into another array and storing it into temp\n        temp[selected[0] * 9 + selected[1]] = event.key;\n        setnumbValue(temp)\n      }\n    }\n  }\n\n  useEffect(() => { //will execute itself when the component is mounted\n    document.addEventListener(\"keydown\", keyChange)//first argument is the action, second argument is the function you want to execute when the event is triggered\n\n    return () => { // like a callback function \n      document.removeEventListener(\"keydown\", keyChange); //example if you are making a get/ajax request, whatever data we get as a return before storing it on a state \n    }\n  }, [selected]) //only when it changes, the hook will be executed. It will only execute once, if it is left empty/ like componentdidmount\n\n  return (\n    <div className=\"App\">\n      <h1>Sudoku</h1>\n      <div className=\"centerAlign\">\n        <CompleteBox numbValue={numbvalue} selected={selected} changeSelected={onclick} />\n      </div>\n      <div className=\"centerAlign\">\n        <SelectNumber numbValue={numbvalue} selected={selected} setnumbValue={setnumbValue} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}